# Load required library for heatmap visualization
library(pheatmap)

# Set your working directory to the folder containing your txt files
setwd("path/to/your/txt/files")

# List all .txt files in the directory
files <- list.files(pattern = "\\.txt$")

# Read each file into a list; each file is assumed to have at least "ID_REF" and "VALUE" columns
data_list <- lapply(files, function(file) {
  read.delim(file, header = TRUE, stringsAsFactors = FALSE)
})

# Extract the expression values (using the 'VALUE' column) for each sample,
# and use the gene IDs (from the 'ID_REF' column) as names
expr_list <- lapply(data_list, function(df) {
  setNames(df$VALUE, df$ID_REF)
})

# Combine the individual sample vectors into a matrix (assuming gene order is consistent)
exprs <- do.call(cbind, expr_list)
colnames(exprs) <- files  # Label columns with file names

# If data are not log-transformed, apply log2 transformation (adding a small offset to avoid log(0))
exprs_log <- log2(exprs + 1)

# Define sample groups manually â€“ ensure the order matches the file order.
# Here we assume that the first two files are controls and the next two are exposed.
sample_group <- factor(c("Control", "Control", "Exposed", "Exposed"))
annotation_col <- data.frame(Group = sample_group)
rownames(annotation_col) <- colnames(exprs_log)

# Optionally, select the top 100 most variable genes to improve visualization
gene_variances <- apply(exprs_log, 1, var)
top_genes <- names(sort(gene_variances, decreasing = TRUE))[1:100]
exprs_top <- exprs_log[top_genes, ]

# Generate the heatmap, scaling rows to highlight relative expression differences
pheatmap(exprs_top, 
         annotation_col = annotation_col, 
         scale = "row", 
         clustering_distance_rows = "euclidean",
         clustering_distance_cols = "euclidean",
         main = "Heatmap of Top 100 Variable Genes")

